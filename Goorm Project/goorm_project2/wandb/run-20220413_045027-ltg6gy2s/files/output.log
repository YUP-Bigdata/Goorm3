Some weights of the model checkpoint at monologg/kobigbird-bert-base were not used when initializing BigBirdForQuestionAnswering: ['cls.predictions.transform.LayerNorm.bias', 'cls.predictions.transform.dense.bias', 'cls.seq_relationship.bias', 'cls.seq_relationship.weight', 'cls.predictions.decoder.weight', 'bert.pooler.bias', 'cls.predictions.transform.LayerNorm.weight', 'cls.predictions.bias', 'cls.predictions.decoder.bias', 'bert.pooler.weight', 'cls.predictions.transform.dense.weight']
- This IS expected if you are initializing BigBirdForQuestionAnswering from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BigBirdForQuestionAnswering from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of BigBirdForQuestionAnswering were not initialized from the model checkpoint at monologg/kobigbird-bert-base and are newly initialized: ['qa_classifier.qa_outputs.weight', 'qa_classifier.output.LayerNorm.weight', 'qa_classifier.intermediate.dense.weight', 'qa_classifier.qa_outputs.bias', 'qa_classifier.output.LayerNorm.bias', 'qa_classifier.output.dense.bias', 'qa_classifier.output.dense.weight', 'qa_classifier.intermediate.dense.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Number of Samples: 12037 243425 100268
Number of Train Samples: 10834 219083 90242
Number of Dev Samples: 1203 24342 10026
Number of Train Samples: 38590
Number of Dev Samples: 4287
['하마', '마치', '초등', '학교']
Number of Samples: 12037 243425 100268
Number of Train Samples: 10834 219083 90242
Number of Dev Samples: 1203 24342 10026
Number of Train Samples: 18886
Number of Dev Samples: 2098
['건축', '학']
tensor([[    2,  7246,  4293,  ...,     0,     0,     0],
        [    2,  3659,  4712,  ...,  2873,   518,     3],
        [    2,  2605, 15381,  ...,     0,     0,     0],
        [    2, 23726,  4540,  ...,     0,     0,     0]])
torch.Size([4, 427])
['guid', 'context', 'question', 'position', 'input_ids', 'token_type_ids', 'start', 'end', 'attention_mask']
Attention type 'block_sparse' is not possible if sequence_length: 352 <= num global tokens: 2 * config.block_size + min. num sliding tokens: 3 * config.block_size + config.num_random_blocks * config.block_size + additional buffer: config.num_random_blocks * config.block_size = 704 with config.block_size = 64, config.num_random_blocks = 3. Changing attention type to 'original_full'...
